use mealsharing;

--- Queries for Meals ---

1. -- Get all meals
SELECT * FROM meal;

2. --Add a new meal
INSERT INTO meal VALUES(NULL, 'Sushi', '8 Pieces', 'Rosendahlsgade 18', '2019-09-12 14:30:00',10, 159.99, now());

3. --Get a meal with any id, fx 1
SELECT * FROM meal WHERE id = 11;

4. --Update a meal with any id, fx 1. Update any attribute fx the title or multiple attributes
UPDATE meal SET title = 'Indian Thali' where id = 1;
UPDATE meal SET description = '4-Course Meal' WHERE id = 2;

5. -- Delete a meal with any id, fx 1
DELETE FROM meal WHERE id = 2;




 ---- Queries for Reservations ---
 
 1. -- Get all reservations
 SELECT * FROM reservation; 
 
 2. --Add a new reservation
 INSERT INTO reservation VALUES (NULL, 3, '2019-09-14 16:23:45', 5);
 
 3. -- Get a reservation with any id, fx 1
 SELECT * FROM reservation WHERE id = 6; 
 
 4. -- Update a reservation with any id, fx 1. Update any attribute fx the title or multiple attributes
 UPDATE reservation SET number_of_guests = 10 WHERE id = 6;

5.-- Delete a reservation with any id, fx 1
DELETE FROM reservation WHERE id = 2;




 ---- Queries for Reviews ---

1. ---Get all reviews
SELECT * FROM review;

2. ---Add a new review
INSERT INTO review VALUES (NULL, 'Wood-fired Pizzas','Great smoky flavour and healthy toppings', 10,4);

3. ---Get a review with any id, fx 1
SELECT * FROM review WHERE id = 7;

4. ---Update a review with any id, fx 1. Update any attribute fx the title or multiple attributes
UPDATE review SET title = 'Danish Smørrebrød' where id = 4;

5. --- Delete a review with any id, fx 1
DELETE FROM review WHERE id = 3;



-----   Additional Queries  ----


1. --- Get meals that has a price smaller than a specific price fx 90
SELECT * FROM meal WHERE price < 100;

2. --- Get meals that still has available reservations
SELECT meal.title, meal.maxreservations, reservation.number_of_guests 
FROM meal JOIN reservation WHERE meal.id = reservation.meal_id 
AND meal.maxreservations > reservation.number_of_guests

3. --- Get meals that partially match a title. Rød grød med will match the meal with the title Rød grød med fløde
SELECT * FROM meal WHERE title LIKE '%ind%' (For all meals with the word 'Indian' in them.. There are 4 such options)

4. --- Get meals that have been ordered between two dates
SELECT title, description, created_date from meal 
where created_date > '2019-08-27 19:16:39' 
AND created_date <= '2019-08-28 19:16:40';

5. --- Get only specific number of meals fx return only 5 meals
SELECT title, description FROM meal limit 5;

6. --- Get the meals that have good reviews
SELECT * FROM review WHERE stars > 3;

7. --- Get reservations for a specific meal sorted by created_date
SELECT meal.title, reservation.created_date FROM meal JOIN reservation 
WHERE meal.id = reservation.meal_id AND meal.title = 'Indian' order by reservation.created_date DESC;

8. --- Sort all meals by average number of stars in the reviews
SELECT Meal.title, AVG(Review.stars) AS AvgRating
FROM Meal LEFT JOIN Review ON Meal.id = Review.meal_id GROUP BY Meal.title
ORDER BY AvgRating DESC;



